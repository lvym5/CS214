Script started on 2024-02-26 14:33:07-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="152" LINES="79"]
]0;lvm5@maroon07: ~/214/labs/07/clojure[01;32mlvm5@maroon07[00m:[01;34m~/214/labs/07/clojure[00m$ cat src/average.clj
;; average.clj "test-drives" function average().
;;
;; Output: the average of a sequence of numbers.
;;
;; Usage: clojure -m average
;;
;; Begun by: Dr. Adams, CS 214 at Calvin College.
;; Completed by: Lily McAboy
;; Date: 3/1/2024
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns average)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; sum() sums the values in a vector.       
;; Receive: aVec, a vector of numbers.
;; Return: the sum of the values in aVec.

(defn sum [aVec]
  (if (vector? aVec)
    (if (empty? aVec)
      0.0
      (+ (peek aVec)
         (sum (pop aVec))
         )
      )
    )
  )

;; Replace this line with the definition of sum2()

(defn sum2 [aVec]
  (if (vector? aVec)
    (if (empty? aVec)
      0.0
      (reduce + aVec)
      )
    )
  )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; average() computes the average of a vector of numbers.
;; Receive: aVec, a vector of numbers. 
;; Return: the average of the numbers in aVec.

(defn average [aVec]
  (if (empty? aVec)
    nil 
    (/ (sum aVec) (count aVec))
    )
)

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; main function to test functions sum() and average()
  ;; Output: the sum and average of some test vectors.
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  (defn -main []
    (let
      [ emptyVec []
       testVec  [9.0 8.0 7.0 6.0]
       ]

      (print "\nThe empty vec: " emptyVec) 
      (print "\nThe test  vec: " testVec) 
      (println "\n")

      ;; Test sum()...
      (printf "\nThe first sum is %.3f\n" (sum emptyVec))
      (printf "The second sum is %.3f\n" (sum testVec))

      ;; Test average()...
      (printf "\nThe first average is %.3f\n" (average emptyVec))
      (printf "The second average is %.3f\n" (average testVec))
      (println "\n")

      ;; Test sum2()...
      (printf "\nThe first sum2 is %.3f\n" (sum2 emptyVec))
      (printf "The second sum2 is %.3f\n" (sum2 testVec))
      (println "\n")
      )
    )

]0;lvm5@maroon07: ~/214/labs/07/clojure[01;32mlvm5@maroon07[00m:[01;34m~/214/labs/07/clojure[00m$ clojure -m average

The empty vec:  []
The test  vec:  [9.0 8.0 7.0 6.0]


The first sum is 0.000
The second sum is 30.000

The first average is nul
The second average is 7.500



The first sum2 is 0.000
The second sum2 is 30.000


]0;lvm5@maroon07: ~/214/labs/07/clojure[01;32mlvm5@maroon07[00m:[01;34m~/214/labs/07/clojure[00m$ exit

Script done on 2024-02-26 14:33:25-05:00 [COMMAND_EXIT_CODE="0"]
